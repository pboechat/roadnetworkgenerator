#ifndef GLOBALS_H
#define GLOBALS_H

#include <Configuration.h>
#include <Graph.h>
#include <StaticMarshallingQueue.h>
#ifdef USE_QUADTREE
#include <Quadtree.h>
#endif

//////////////////////////////////////////////////////////////////////////
extern Configuration* g_configuration;
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::Graph* g_graph;
//////////////////////////////////////////////////////////////////////////
extern unsigned char** g_workQueuesBuffers1;
//////////////////////////////////////////////////////////////////////////
extern unsigned char** g_workQueuesBuffers2;
//////////////////////////////////////////////////////////////////////////
extern StaticMarshallingQueue** g_workQueues1;
//////////////////////////////////////////////////////////////////////////
extern StaticMarshallingQueue** g_workQueues2;
//////////////////////////////////////////////////////////////////////////
extern unsigned char* g_populationDensitiesSamplingBuffer;
//////////////////////////////////////////////////////////////////////////
extern unsigned int* g_distancesSamplingBuffer;
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::Vertex* g_vertices;
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::Edge* g_edges;
#ifdef USE_QUADTREE
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::QuadTree* g_quadtree;
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::Quadrant* g_quadrants;
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::QuadrantEdges* g_quadrantsEdges;
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::EdgeIndex* g_queryResults;
#endif

//////////////////////////////////////////////////////////////////////////
void initializeWorkQueues();
//////////////////////////////////////////////////////////////////////////
void disposeWorkQueues();
//////////////////////////////////////////////////////////////////////////
void initializeSamplingBuffers();
//////////////////////////////////////////////////////////////////////////
void disposeSamplingBuffers();
//////////////////////////////////////////////////////////////////////////
void initializeGraphBuffers();
//////////////////////////////////////////////////////////////////////////
void disposeGraphBuffers();
#ifdef USE_QUADTREE
//////////////////////////////////////////////////////////////////////////
void initializeQuadtreeBuffers();
//////////////////////////////////////////////////////////////////////////
void disposeQuadtreeBuffers();
#endif

#endif