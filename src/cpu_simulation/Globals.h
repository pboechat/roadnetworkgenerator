#ifndef GLOBALS_H
#define GLOBALS_H

#include "Defines.h"
#include <Configuration.h>
#include <Graph.h>
#include <Primitive.h>
#include <StaticMarshallingQueue.h>
#ifdef USE_QUADTREE
#include <Quadtree.h>
#endif
#include <ImageMap.h>

//////////////////////////////////////////////////////////////////////////
extern Configuration* g_configuration;
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::Graph* g_graph;
//////////////////////////////////////////////////////////////////////////
extern unsigned char* g_workQueuesBuffers1[NUM_PROCEDURES];
//////////////////////////////////////////////////////////////////////////
extern unsigned char* g_workQueuesBuffers2[NUM_PROCEDURES];
//////////////////////////////////////////////////////////////////////////
extern StaticMarshallingQueue g_workQueues1[NUM_PROCEDURES];
//////////////////////////////////////////////////////////////////////////
extern StaticMarshallingQueue g_workQueues2[NUM_PROCEDURES];
//////////////////////////////////////////////////////////////////////////
extern unsigned char* g_populationDensitiesSamplingBuffer;
//////////////////////////////////////////////////////////////////////////
extern unsigned int* g_distancesSamplingBuffer;
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::Vertex* g_vertices;
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::Edge* g_edges;
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::Primitive* g_primitives;
//////////////////////////////////////////////////////////////////////////
extern unsigned int g_numExtractedPrimitives;
#ifdef USE_QUADTREE
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::QuadTree* g_quadtree;
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::Quadrant* g_quadrants;
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::QuadrantEdges* g_quadrantsEdges;
//////////////////////////////////////////////////////////////////////////
extern RoadNetworkGraph::EdgeIndex* g_queryResults;
#endif
//////////////////////////////////////////////////////////////////////////
extern unsigned char* g_populationDensityMapData;
//////////////////////////////////////////////////////////////////////////
extern unsigned char* g_waterBodiesMapData;
//////////////////////////////////////////////////////////////////////////
extern unsigned char* g_blockadesMapData;
//////////////////////////////////////////////////////////////////////////
extern unsigned char* g_naturalPatternMapData;
//////////////////////////////////////////////////////////////////////////
extern unsigned char* g_radialPatternMapData;
//////////////////////////////////////////////////////////////////////////
extern unsigned char* g_rasterPatternMapData;
//////////////////////////////////////////////////////////////////////////
extern ImageMap* g_populationDensityMap;
//////////////////////////////////////////////////////////////////////////
extern ImageMap* g_waterBodiesMap;
//////////////////////////////////////////////////////////////////////////
extern ImageMap* g_blockadesMap;
//////////////////////////////////////////////////////////////////////////
extern ImageMap* g_naturalPatternMap;
//////////////////////////////////////////////////////////////////////////
extern ImageMap* g_radialPatternMap;
//////////////////////////////////////////////////////////////////////////
extern ImageMap* g_rasterPatternMap;

//////////////////////////////////////////////////////////////////////////
void initializeWorkQueues();

//////////////////////////////////////////////////////////////////////////
void allocateWorkQueues(unsigned int maxWorkQueueCapacity);
//////////////////////////////////////////////////////////////////////////
void allocateSamplingBuffers(unsigned int samplingArc);
//////////////////////////////////////////////////////////////////////////
void allocateGraphBuffers(unsigned int maxVertices, unsigned int maxEdges);
//////////////////////////////////////////////////////////////////////////
void allocatePrimitivesBuffer(unsigned int maxPrimitives);
#ifdef USE_QUADTREE
//////////////////////////////////////////////////////////////////////////
void allocateQuadtreeBuffers(unsigned int maxResultsPerQuery);
#endif

//////////////////////////////////////////////////////////////////////////
void allocateAndInitializeImageMaps(const char* populationDensityMapFilePath,
									const char* waterBodiesMapFilePath,
									const char* blockadesMapFilePath,
									const char* naturalPatternMapFilePath,
									const char* radialPatternMapFileMap,
									const char* rasterPatternMapFileMap,
									unsigned int mapWidth,
									unsigned int mapHeight);

//////////////////////////////////////////////////////////////////////////
void freeWorkQueues();
//////////////////////////////////////////////////////////////////////////
void freeSamplingBuffers();
//////////////////////////////////////////////////////////////////////////
void freeGraphBuffers();
//////////////////////////////////////////////////////////////////////////
void freePrimitivesBuffer();
#ifdef USE_QUADTREE
//////////////////////////////////////////////////////////////////////////
void freeQuadtreeBuffers();
#endif
//////////////////////////////////////////////////////////////////////////
void freeImageMaps();

#endif